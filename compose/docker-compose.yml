name: 'field_openstack'

services:

  nginx-proxy:
    image: nginxproxy/nginx-proxy
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro

  nginx:
    build:
      context: ..
      dockerfile: ./compose/nginx/Dockerfile
    restart: unless-stopped
    expose:
      - "8001"
    volumes:
      - ../volumes/django/static:/usr/share/nginx/static:ro
      - ../volumes/django/media:/usr/share/nginx/media:ro
    env_file:
      - .env
    environment:
      VIRTUAL_HOST: ${DJANGO_ALLOWED_HOSTS}
      VIRTUAL_PATH: "~^/(assets/|media/|static/|redist/|robots.txt)"
      VIRTUAL_PROTO: http
      VIRTUAL_PORT: 8001

  stories:
    build:
      context: ..
      dockerfile: ./compose/stories/Dockerfile
    restart: unless-stopped
    ports:
      - "8002:8002"
    volumes:
      - ../volumes/stories/html:/usr/share/nginx/stories:Z
    env_file:
      - .env
    environment:
      VIRTUAL_HOST: ${DJANGO_ALLOWED_HOSTS}
      VIRTUAL_PATH: "/"
      VIRTUAL_PROTO: http
      VIRTUAL_PORT: 8002


  django:
    build:
      context: ../
      dockerfile: ./compose/openstack/django/Dockerfile
    command: /start
    depends_on:
      postgres:
        condition: service_healthy
      elasticsearch:
        condition: service_started
    env_file:
      - .env
    restart: unless-stopped
    volumes:
      - ../volumes/django/static:/app/staticfiles
      - ../volumes/django/media:/app/media
    ports:
      - "8000:8000"
    environment:
      VIRTUAL_HOST: ${DJANGO_ALLOWED_HOSTS}
      VIRTUAL_PATH: "/"
      VIRTUAL_PROTO: http
      VIRTUAL_PORT: 8000


  postgres:
    build:
      context: ../
      dockerfile: ./compose/production/postgres/Dockerfile
    restart: unless-stopped
    image: postgres
    environment:
      #POSTGRES_USER: ${POSTGRES_USER}
      #POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      PGDATA: /var/lib/postgresql/data/pgdata
    healthcheck:
      test: [ "CMD-SHELL", "sh -c 'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}'" ]
      timeout: 10s
      interval: 5s
      retries: 10
    volumes:
      - ../volumes/postgres_data:/var/lib/postgresql/data:Z
      - ../volumes/postgres_data_backups:/backups:z
    env_file:
      - .env
    expose:
      - "5432"


  elasticsearch:
    image: elasticsearch:7.10.1
    env_file:
      - .env
    ports:
      - "9200:9200"
      - "9300:9300"
    restart: unless-stopped
